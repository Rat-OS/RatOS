"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([["8370"],{55094:function(e,i,r){r.r(i),r.d(i,{default:()=>p,frontMatter:()=>t,metadata:()=>o,assets:()=>l,toc:()=>c,contentTitle:()=>s});var o=JSON.parse('{"id":"manual-firmware-compilation","title":"Manual klipper firmware compilation","description":"RatOS automatically compiles firmware for your board when klipper is updated, if that fails, the RatOS Configurator will assist you in flashing your board in one of multiple ways. You shouldn\'t have to do this unless something is severely broken.","source":"@site/docs/manual-firmware-compilation.md","sourceDirName":".","slug":"/manual-firmware-compilation","permalink":"/docs/manual-firmware-compilation","draft":false,"unlisted":false,"editUrl":"https://github.com/Rat-OS/RatOS/edit/v2.x/site/docs/manual-firmware-compilation.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10,"sidebar_label":"Manual Firmware Compilation"},"sidebar":"docsSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/troubleshooting"}}'),n=r("52676"),a=r("23663");let t={sidebar_position:10,sidebar_label:"Manual Firmware Compilation"},s="Manual klipper firmware compilation",l={},c=[{value:"SSH into the Raspberry Pi",id:"ssh-into-the-raspberry-pi",level:2},{value:"Download the firmware from the Pi",id:"download-the-firmware-from-the-pi",level:2}];function d(e){let i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsx)(i.h1,{id:"manual-klipper-firmware-compilation",children:"Manual klipper firmware compilation"})}),"\n",(0,n.jsx)(i.admonition,{type:"info",children:(0,n.jsxs)(i.p,{children:["RatOS automatically compiles firmware for your board when klipper is updated, if that fails, the ",(0,n.jsx)(i.a,{href:"http://ratos.local/configure?step=1",children:"RatOS Configurator"})," will assist you in flashing your board in one of multiple ways. You shouldn't have to do this unless something is severely broken."]})}),"\n",(0,n.jsx)(i.p,{children:"If you need to compile the firmware for your board yourself, here's how you do it."}),"\n",(0,n.jsx)(i.h2,{id:"ssh-into-the-raspberry-pi",children:"SSH into the Raspberry Pi"}),"\n",(0,n.jsxs)(i.p,{children:["You're need to log into the Pi via SSH. The default username is ",(0,n.jsx)(i.code,{children:"pi"})," and the password is ",(0,n.jsx)(i.code,{children:"raspberry"})," (sidenote: it's a good idea to change this via ",(0,n.jsx)(i.code,{children:"sudo raspi-config"}),"). If you're on linux or Mac OS, you can do this by opening a terminal and type:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"ssh pi@ratos.local\n"})}),"\n",(0,n.jsx)(i.p,{children:"Now navigate to the klipper directory:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"cd ~/klipper\n"})}),"\n",(0,n.jsxs)(i.p,{children:["The configuration klipper needs to compile the firmware for your board is stored in ",(0,n.jsx)(i.code,{children:"~/printer_data/config/RatOS/boards/[BOARD_NAME]/firmware.config"}),". To list the board names execute the following command:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"ls -la ~/printer_data/config/RatOS/boards\n"})}),"\n",(0,n.jsxs)(i.p,{children:["Let's say we need to compile the firmware for the octopus. We then need to copy the configuration file from ",(0,n.jsx)(i.code,{children:"~/printer_data/config/RatOS/boards/btt-octopus-11/firmware.config"})]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"cp -f ~/printer_data/config/RatOS/boards/btt-octopus-11/firmware.config ~/klipper/.config\n"})}),"\n",(0,n.jsx)(i.p,{children:"Now we're ready to compile the firmware!"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"make olddefconfig\nmake clean\nmake\n"})}),"\n",(0,n.jsx)(i.h2,{id:"download-the-firmware-from-the-pi",children:"Download the firmware from the Pi"}),"\n",(0,n.jsxs)(i.p,{children:["Now klipper has compiled it's firmware to ",(0,n.jsx)(i.code,{children:"~/klipper/out/klipper.bin"}),". We can download that to our machine via ",(0,n.jsx)(i.code,{children:"scp"})," or ",(0,n.jsx)(i.a,{href:"https://winscp.net/eng/download.php",children:"WinSCP"})," (for windows users)."]}),"\n",(0,n.jsx)(i.p,{children:"Linux and Mac OS users can use scp from their local machines like this:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"scp pi@ratos.local:klipper/out/klipper.bin firmware.bin\n"})})]})}function p(e={}){let{wrapper:i}={...(0,a.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},23663:function(e,i,r){r.d(i,{Z:function(){return s},a:function(){return t}});var o=r(75271);let n={},a=o.createContext(n);function t(e){let i=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),o.createElement(a.Provider,{value:i},e.children)}}}]);